version: "3"


services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always

  database:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: <Юзернэм вашего постгреса>
      POSTGRES_PASSWORD: <Пароль вашего постгреса>
      POSTGRES_DB: <Название ваши базы данных>

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

  prometheus:
      build: ./internal/prometheus
      ports:
        - "9090:9090"


  ffmpeg-app:
    image:  rituparnshukla/ffmpegservice:latest
    ports:
      - 8085:8085
    depends_on:
      - zookeeper
      - broker
      - database
    env_file: .env
    volumes:
      - ffmpeg_data:/data
    restart: on-failure


volumes:
  postgres_data:
  ffmpeg_data: